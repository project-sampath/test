###############################################################
# JBoss-cli Configuration Script for Pega 7.4 deployment
#
# @author:  GIFFD <domenico.giffone@pega.com>
# @date:    2018-06-13
# @version: 0.2
#
# This script applies the Application Server configuration for Pega 7.4 described at:
# https://community.pega.com/system/files/pdfs/Pega74-install-jboss-oracle_0.pdf
#
# The script is very basic and just support an Oracle database at the moment.
# The main steps are outlined by comments
#
# Please note that unlike the Pega Installation Guide the following differences are applied:
#
#  - No configuration is applied to enable WebSocket support
#    JBoss EAP 7 OOTB supports jsr356/WebSocket API
#    The following log confirm that Atmosphere Framework detects the jsr356 support correctly
#    INFO  [org.atmosphere.cpr.AtmosphereFramework] (as-jboss7-ora-740)  Atmosphere is using async support: org.atmosphere.container.JSR356AsyncSupport running under container: WildFly 2.1.2.Final-redhat-1 - 1.3.21.Final-redhat-1 using javax.servlet/3.0 and jsr356/WebSocket API
#
#  - SLSB and MDBs pools maxSize are leaved to default values:
#    This is because derive-size attribute is used in JBoss EAP 7.0.x to determine the pool max size:
#    https://wildscribe.github.io/WildFly/10.1/subsystem/ejb3/strict-max-bean-instance-pool/index.html
#    As proved by the following boostrap logs the max sizes calculated for the pools on 8 cores Intel(R) Xeon(R) CPU E5-1620 v3 @ 3.50GHz seems to be enough for a docker container
#    INFO  [org.jboss.as.ejb3] (MSC service thread 1-3) WFLYEJB0482: Strict pool mdb-strict-max-pool is using a max instance size of 32 (per class), which is derived from the number of CPUs on this host.
#    INFO  [org.jboss.as.ejb3] (MSC service thread 1-4) WFLYEJB0481: Strict pool slsb-strict-max-pool is using a max instance size of 128 (per class), which is derived from thread worker pool sizing.
#
#
# The following documents have been used for reference while building this script:
#
#   https://goldmann.pl/blog/2014/07/23/customizing-the-configuration-of-the-wildfly-docker-image/
#   https://blog.voina.org/docker-custom-jboss-eap-docker-image-with-cli-applied-patches-and-cli-configurations/
#   https://github.com/juliojsb/jboss-cli-snippets-compilation
#   https://docs.jboss.org/author/display/WFLY8/CLI+Recipes
#   https://planet.jboss.org/post/jboss_as_7_0_1_configuring_ejb3_pools
#   https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.0/html/configuration_guide/
#   https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.1/html/performance_tuning_guide/ejb_subsystem_tuning
#   https://wildscribe.github.io/WildFly/10.1/subsystem/ejb3/strict-max-bean-instance-pool/index.html
#   https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.1/html/configuration_guide/configuring_the_web_server_undertow
###############################################################

# Assign properties used later on in the script
## Base datasource properties
set baseDatasourceName=${base.datasource.name}
set baseDatasourceDriverName=${base.datasource.driver.name}
set baseDatasourceJndiName=${base.datasource.jndi.name}
set baseDatasourceUrl=${base.datasource.url}
set baseDatasourceUsername=${base.datasource.username}
set baseDatasourcePassword=${base.datasource.password}
set baseDatasourcePoolInitialsize=${base.datasource.pool.initialSize}
set baseDatasourcePoolMaxsize=${base.datasource.pool.maxSize}

## Admin datasource properties
set adminDatasourceName=${admin.datasource.name}
set adminDatasourceDriverName=${admin.datasource.driver.name}
set adminDatasourceJndiName=${admin.datasource.jndi.name}
set adminDatasourceUrl=${admin.datasource.url}
set adminDatasourceUsername=${admin.datasource.username}
set adminDatasourcePassword=${admin.datasource.password}
set adminDatasourcePoolInitialsize=${admin.datasource.pool.initialSize}
set adminDatasourcePoolMaxsize=${admin.datasource.pool.maxSize}

## Schema Names
set rulesDefaultSchemaName=${rules.defaultSchemaName}
set dataDefaultSchemaName=${data.defaultSchemaName}

# Mark the commands below to be run as a batch
batch

#Add Oracle JDBC Driver Module
#module add --name=com.oracle.jdbc --resources=/pega/lib/ojdbc8.jar --dependencies=javax.api,javax.transaction.api

#Add Postgres JDBC Driver Module
module add --name=org.postgresql --resources=/pega/lib/postgresql-42.2.1.jre6.jar --dependencies=javax.api,javax.transaction.api

# Add Oracle driver
#/subsystem=datasources/jdbc-driver=oracle:add(driver-name="oracle", driver-module-name="com.oracle.jdbc", driver-class-name="oracle.jdbc.driver.OracleDriver")

# Add Postgres driver
/subsystem=datasources/jdbc-driver=postgres:add(driver-name="postgres",driver-module-name="org.postgresql")

# Add Global Modules
#/subsystem=ee:write-attribute(name="global-modules",value=[{"name" => "com.oracle.jdbc","slot" => "main"},{"name" => "org.jboss.remoting-jmx","slot" => "main"}])




data-source add --jndi-name=java:jboss/datasources/PegaRULES --name=pegarules --connection-url=jdbc:postgresql://localhost:5432/pegadb --driver-name=postgres --user-name=pega_data --password=pega

data-source add --jndi-name=java:jboss/datasources/AdminPegaRULES --name=adminpegarules --connection-url=jdbc:postgresql://localhost:5432/pegadbadmin --driver-name=postgres --user-name=pega_install --password=pega














# Add Naming Bindings
/subsystem=naming/binding=java\:\/prconfig\/database\/databases\/PegaRULES\/defaultSchema:add(value=$rulesDefaultSchemaName,binding-type=simple)
/subsystem=naming/binding=java\:\/prconfig\/database\/databases\/PegaDATA\/defaultSchema:add(value=$dataDefaultSchemaName,binding-type=simple)
/subsystem=naming/binding=java\:\/prconfig\/database\/databases\/PegaRULES\/dataSourceAdmin:add(value=$adminDatasourceJndiName,binding-type=simple)
/subsystem=naming/binding=java\:\/prconfig\/database\/databases\/PegaDATA\/dataSourceAdmin:add(value=$adminDatasourceJndiName,binding-type=simple)
/subsystem=naming/binding=java\:\/url\/pega\/none:add(value="file:///dev/null",binding-type=simple)

# Add JMS Connection Factory
/subsystem=messaging-activemq/server=default/pooled-connection-factory=AsyncConnectionFactory:add(entries=[java:/jms/PRAsyncTCF],connectors=[in-vm])

# Increase http max post size
/subsystem=undertow/server=default-server/http-listener=default:write-attribute(name="max-post-size", value="10485760000")

# Disable proactive authentication
/subsystem=undertow/servlet-container=default:write-attribute(name="proactive-authentication", value="false")

# Reload
reload

# Execute the batch
run-batch
